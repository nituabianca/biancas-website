{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bianca\\\\Desktop\\\\ttj final amin\\\\biancas-website\\\\src\\\\components\\\\pages\\\\educations\\\\GitHubUser.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  }\n}));\nexport default function GitHubUser() {\n  const userName = '\tIuliaStoian05';\n  const [repos, setRepos] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    fetch('https://api.github.com/users/' + userName + '/repos?sort=created').then(response => response.json()).then(data => setRepos(data));\n  }, [userName]);\n  const listItems = repos.map(repo => React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: repo.owner.login,\n    src: repo.owner.avatar_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: repo.name,\n    secondary: React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, repo.owner.login), \" — \" + repo.description),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"GitHub Repos\"), React.createElement(List, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, listItems));\n}","map":{"version":3,"sources":["C:/Users/bianca/Desktop/ttj final amin/biancas-website/src/components/pages/educations/GitHubUser.js"],"names":["React","Fragment","useState","useEffect","makeStyles","Avatar","Typography","List","ListItem","ListItemAvatar","ListItemText","Divider","useStyles","theme","root","width","backgroundColor","palette","background","paper","inline","display","GitHubUser","userName","repos","setRepos","classes","fetch","then","response","json","data","listItems","map","repo","owner","login","avatar_url","name","description"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        // maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nexport default function GitHubUser() {\n    const userName = '\tIuliaStoian05';\n    const [repos, setRepos] = useState([]);\n\n    const classes = useStyles();\n\n    useEffect( () => {\n        fetch('https://api.github.com/users/' + userName + '/repos?sort=created')\n            .then(response => response.json())\n            .then(data => setRepos(data));\n    }, [userName]);\n\n    const listItems = repos.map((repo) =>\n        <Fragment>\n            <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                    <Avatar alt={repo.owner.login} src={repo.owner.avatar_url} />\n                </ListItemAvatar>\n                <ListItemText\n                    primary={repo.name}\n                    secondary={\n                        <React.Fragment>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                className={classes.inline}\n                                color=\"textPrimary\"\n                            >\n                                {repo.owner.login}\n                            </Typography>\n                            {\" — \" + repo.description}\n                        </React.Fragment>\n                    }\n                />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n        </Fragment>\n    );\n\n    return (\n        <div>\n            <Typography variant=\"h4\" align=\"left\">\n                GitHub Repos\n            </Typography>\n            <List className={classes.root}>{listItems}</List>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}