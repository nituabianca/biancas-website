{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bianca\\\\Desktop\\\\ttj final amin\\\\biancas-website\\\\src\\\\components\\\\pages\\\\MyProjects\\\\GitHubUser.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    // maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\nexport default function GitHubUser() {\n  const userName = \"nituabianca\";\n  const [repos, setRepos] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    fetch(\"https://api.github.com/users/\" + userName + \"/repos?sort=created\").then(response => response.json()).then(data => setRepos(data));\n  }, [userName]);\n  const listItems = repos.map(repo => React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: repo.owner.login,\n    src: repo.owner.avatar_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: repo.name,\n    secondary: React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, repo.owner.login)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"MY PROJECTS\"), React.createElement(List, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, listItems));\n}","map":{"version":3,"sources":["C:/Users/bianca/Desktop/ttj final amin/biancas-website/src/components/pages/MyProjects/GitHubUser.js"],"names":["React","Fragment","useState","useEffect","makeStyles","Avatar","Typography","List","ListItem","ListItemAvatar","ListItemText","Divider","useStyles","theme","root","width","backgroundColor","palette","background","paper","inline","display","GitHubUser","userName","repos","setRepos","classes","fetch","then","response","json","data","listItems","map","repo","owner","login","avatar_url","name"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    // maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\n\nexport default function GitHubUser() {\n  const userName = \"nituabianca\";\n  const [repos, setRepos] = useState([]);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetch(\"https://api.github.com/users/\" + userName + \"/repos?sort=created\")\n      .then((response) => response.json())\n      .then((data) => setRepos(data));\n  }, [userName]);\n\n  const listItems = repos.map((repo) => (\n    <Fragment>\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar alt={repo.owner.login} src={repo.owner.avatar_url} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={repo.name}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {repo.owner.login}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n    </Fragment>\n  ));\n\n  return (\n    <div>\n      <Typography variant=\"h5\" align=\"left\">\n        MY PROJECTS\n      </Typography>\n      <List className={classes.root}>{listItems}</List>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}